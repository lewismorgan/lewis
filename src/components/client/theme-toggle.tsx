'use client'

import { useEffect, useState } from 'react'

import { useTheme } from 'next-themes'

import { Button } from '../ui/button'

export const ThemeToggle = () => {
  const [mounted, setMounted] = useState(false)
  const { theme, setTheme } = useTheme()

  // useEffect only runs on the client, so now we can safely show the UI
  useEffect(() => {
    setMounted(true)
  }, [])

  if (!mounted) {
    // Only enable this button for use when client has fully loaded
    return null
  }

  const isDark = theme === 'dark' || theme === undefined
  return (
    <Button
      aria-label="Toggle Theme"
      variant={'outline'}
      className="bg-transparent p-3 backdrop-blur-sm focus:outline-none"
      onClick={() => setTheme(isDark ? 'light' : 'dark')}
    >
      {isDark ? <LightSide /> : <DarkSide />}
    </Button>
  )
}

const LightSide = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      viewBox="0.93 2.133 37.225 38"
      className="h-8 w-8 text-red-900"
    >
      <path
        strokeLinejoin="round"
        d="M 0.939 20.677 C 1.168 14.607 4.244 9.008 9.868 5.309 C 9.884 5.315 10.03 5.262 9.964 5.388 C 9.518 5.801 1.509 15.261 8.881 22.729 C 8.881 22.729 12.754 26.452 15.757 22.919 C 15.757 22.919 18.722 19.083 15.72 13.267 C 15.72 13.267 14.96 11.367 12.223 10.19 L 14.428 7.757 C 14.428 7.757 16.291 8.557 17.733 10.724 C 17.733 10.724 17.81 8.442 16.061 6.01 L 19.479 2.133 L 22.862 5.974 C 22.862 5.974 21.307 8.178 21.192 10.76 C 21.192 10.76 22.254 9.012 24.536 7.757 L 26.7 10.19 C 26.7 10.19 24.619 10.875 23.224 13.241 C 22.026 15.434 21.103 20.123 23.278 23 C 23.278 23 25.713 26.452 29.997 22.796 C 29.997 22.796 37.873 15.739 29.189 5.537 C 29.189 5.537 28.715 5.117 29.248 5.345 C 33.085 8.139 37.681 11.825 38.155 21.02 C 37.968 32.172 30.5 40.133 19.596 40.133 C 8.918 40.133 0.618 31.223 0.939 20.677 Z"
      />
    </svg>
  )
}

const DarkSide = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      viewBox="-0.411 -0.346 25 25"
      strokeWidth="0.00032"
      className="h-9 w-9 text-black md:h-10 md:w-10"
    >
      <path d="M 23.594 8.895 C 23.039 6.828 21.953 4.984 20.484 3.516 C 19.02 2.047 17.172 0.961 15.102 0.406 C 14.113 0.141 13.074 0 12 0 C 10.926 0 9.883 0.141 8.891 0.406 C 6.824 0.961 4.98 2.051 3.512 3.516 C 2.047 4.984 0.957 6.828 0.406 8.895 C 0.141 9.887 0 10.926 0 12 C 0 13.074 0.141 14.113 0.406 15.102 C 0.957 17.168 2.043 19.012 3.512 20.48 C 4.98 21.949 6.828 23.039 8.895 23.594 C 9.883 23.859 10.926 24 12 24 C 13.074 24 14.113 23.859 15.105 23.594 C 17.172 23.043 19.016 21.953 20.484 20.484 C 21.949 19.02 23.039 17.176 23.59 15.109 C 23.855 14.117 24 13.074 24 12 C 24 10.926 23.859 9.883 23.594 8.895 Z M 12.406 1.344 C 13.219 1.371 14.004 1.492 14.758 1.695 C 16.594 2.184 18.234 3.152 19.539 4.461 C 20.078 4.996 20.563 5.594 20.977 6.238 L 20.543 6.488 C 20.152 5.883 19.695 5.32 19.188 4.813 L 18.293 5.707 C 17.203 4.617 15.832 3.809 14.301 3.398 L 14.629 2.176 C 13.914 1.984 13.172 1.871 12.406 1.84 L 12.406 1.344 Z M 15.602 12 C 15.602 12.324 15.555 12.637 15.477 12.938 L 19.164 13.926 C 18.82 15.199 18.148 16.34 17.242 17.246 L 14.547 14.547 C 14.105 14.984 13.551 15.313 12.93 15.477 L 13.918 19.164 C 13.305 19.328 12.664 19.418 12 19.418 C 11.336 19.418 10.691 19.328 10.078 19.164 L 11.066 15.477 C 10.445 15.313 9.891 14.984 9.449 14.539 L 6.75 17.238 C 5.844 16.332 5.176 15.191 4.836 13.914 L 8.52 12.926 C 8.441 12.633 8.398 12.32 8.398 12 C 8.398 11.68 8.441 11.367 8.523 11.07 L 4.836 10.082 C 5.176 8.805 5.848 7.664 6.754 6.758 L 9.453 9.457 C 9.891 9.016 10.445 8.688 11.066 8.523 L 10.078 4.836 C 10.691 4.672 11.336 4.582 12 4.582 C 12.664 4.582 13.305 4.672 13.918 4.836 L 12.93 8.52 C 13.551 8.688 14.105 9.012 14.547 9.453 L 17.246 6.754 C 18.152 7.66 18.824 8.805 19.164 10.078 L 15.477 11.066 C 15.559 11.363 15.602 11.676 15.602 12 Z M 4.457 4.461 C 5.762 3.156 7.402 2.188 9.238 1.695 C 9.934 1.508 10.66 1.391 11.406 1.352 L 11.406 1.852 C 10.703 1.891 10.023 2.004 9.367 2.18 L 9.695 3.402 C 8.16 3.813 6.793 4.621 5.703 5.711 L 4.809 4.813 C 4.301 5.32 3.848 5.883 3.457 6.488 L 3.023 6.238 C 3.434 5.594 3.918 5 4.457 4.461 Z M 2.52 16.895 C 2.172 16.223 1.895 15.504 1.695 14.758 C 1.461 13.879 1.332 12.953 1.332 12 C 1.332 11.047 1.461 10.121 1.695 9.238 C 1.895 8.492 2.172 7.777 2.52 7.105 L 2.953 7.355 C 2.629 7.988 2.367 8.664 2.18 9.367 L 3.402 9.695 C 3.203 10.43 3.102 11.203 3.102 12 C 3.102 12.797 3.203 13.566 3.398 14.301 L 2.176 14.629 C 2.363 15.332 2.625 16.008 2.953 16.645 L 2.52 16.895 Z M 11.406 22.648 C 10.66 22.609 9.938 22.492 9.238 22.305 C 7.398 21.813 5.758 20.844 4.453 19.535 C 3.914 18.996 3.434 18.402 3.02 17.762 L 3.453 17.512 C 3.848 18.113 4.301 18.676 4.805 19.184 L 5.703 18.289 C 6.789 19.379 8.16 20.188 9.695 20.598 L 9.367 21.82 C 10.023 21.996 10.707 22.109 11.406 22.148 L 11.406 22.648 Z M 19.539 19.543 C 18.234 20.848 16.594 21.813 14.758 22.305 C 14.004 22.508 13.219 22.629 12.406 22.656 L 12.406 22.156 C 13.172 22.129 13.914 22.012 14.629 21.824 L 14.301 20.598 C 15.832 20.191 17.203 19.383 18.293 18.293 L 19.188 19.191 C 19.695 18.68 20.152 18.117 20.543 17.512 L 20.977 17.762 C 20.563 18.406 20.082 19.004 19.539 19.543 Z M 21.48 16.895 L 21.047 16.645 C 21.371 16.012 21.633 15.34 21.82 14.637 L 20.598 14.309 C 20.793 13.57 20.898 12.801 20.898 12 C 20.898 11.203 20.797 10.43 20.598 9.695 L 21.82 9.367 C 21.633 8.664 21.371 7.988 21.047 7.355 L 21.48 7.105 C 21.828 7.777 22.105 8.492 22.305 9.238 C 22.539 10.117 22.664 11.047 22.664 12 C 22.664 12.957 22.539 13.883 22.305 14.766 C 22.105 15.512 21.824 16.223 21.48 16.895 Z"></path>
    </svg>
  )
}
